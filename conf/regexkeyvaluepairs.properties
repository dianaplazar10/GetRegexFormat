digit=/d;/w
underscore=/w
space=/s
tab=/s
newline=/s
carriage.return=/s
vertical.tab=/s
character=/w
not.character=/W
not.digit=/D
not.space=/S
not.tab=/S
not.newline=/S
not.carriage.return=/S
not.vertical.tab=/S
one.or.more=+:follows another regex symbol such as \w to indicate that the regex pattern can repeat one or more times
repeat.exactly.3.times={3}:follows another regex symbol such as \D to indicate that it repeated only exactly 3 times- say: for /D{3} - example string is 'ABC'
repeat.exactly.2.upto.4.times={2,4}:follows another regex symbol such as \D to indicate repeats or the given count in the range- say: for /D{2,3} - non-digit character can repeat 2 to 3 times
3.or.more.times={3,}:follows another regex symbol such as \D to indicate repeats for the given number of times or more, say: for /D{2,} - non-digit character can repeat 2 or more times
0.or.more.times=*:follows another regex symbol such as \D to indicate repeats for the given regex pattern, 0 times or more, say: for /D* - non-digit character can repeat 0 or more times
once.or.none=?:follows another regex symbol such as \D to indicate repeats for the given regex pattern just once or never, say: for /D? - non-digit character can repeat once or never
or=|:embeds between 2 regex to indicate one of the 2. Example- if regex pattern is \D|\s; it indicates a non-digit or space
any.character.except.line.break=.:example-\d.\d -2a4
period=\.:follows another regex symbol such as \w to indicate that the regex pattern needs to proceed with a period
group.repeats=(...);\1;\2:the pattern in the braces indicate the pattern that is tagged for repeats, and the \1 or \2 defines the index of which group/braced area to repeat. Say r(\D)g\1x, match example is regex, where e is the braced pattern and it repeated at location, \1
repeat.position=(...);\1;\2:the pattern in the braces indicate the pattern that is tagged for repeats, and the \1 or \2 defines the index of which group/braced area to repeat. Say r(\D)g\1x, match example is regex, where e is the braced pattern and it repeated at location, \1
repeat.patterns=(...);\1;\2:the pattern in the braces indicate the pattern that is tagged for repeats, and the \1 or \2 defines the index of which group/braced area to repeat. Say r(\D)g\1x, match example is regex, where e is the braced pattern and it repeated at location, \1
group.repeats.exception=(?:...;\1;\2:the pattern in the braces indicate the pattern that is tagged is not eligible for repeats, and the \1 or \2 will have no effect on the braced pattern. it will look for a group without the ?. within the braced section. Also look up for "group repeats"
repeat.patterns.exception=(?:...);\1;\2:the pattern in the braces indicate the pattern that is tagged is not eligible for repeats, and the \1 or \2 will have no effect on the braced pattern. it will look for a group without the ?. within the braced section. Also look up for "group repeats"
repeat.position.exception=(?:...);\1;\2:the pattern in the braces indicate the pattern that is tagged is not eligible for repeats, and the \1 or \2 will have no effect on the braced pattern. it will look for a group without the ?. within the braced section. Also look up for "group repeats"